{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\SoftUni\\\\JS Web\\\\JS React\\\\MY FINAL PROJECT - REAL\\\\react-exam-brokers\\\\react-exam-brokers\\\\src\\\\components\\\\sharedComponents\\\\Spinner.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\ndisplay: block;\nmargin: 0 auto;\nborder-color: blue;\nsize: 60px;\n`;\n\nfunction Spinner() {\n  _s();\n\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sweet-loading\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: color,\n      onChange: input => setColor(input.target.value),\n      placeholder: \"Color of the loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BounceLoader, {\n      color: \"#36D7B7\",\n      loading: loading,\n      css: override,\n      size: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Spinner, \"plPwqsasFCEF7XjtGVvvorco7pA=\");\n\n_c = Spinner;\nexport default Spinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spinner\");","map":{"version":3,"sources":["C:/Users/user/Desktop/SoftUni/JS Web/JS React/MY FINAL PROJECT - REAL/react-exam-brokers/react-exam-brokers/src/components/sharedComponents/Spinner.js"],"names":["useState","css","BounceLoader","override","Spinner","loading","setLoading","color","setColor","input","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB,C,CAGA;;;AACA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA;AACA,CALA;;AAOA,SAASG,OAAT,GAAmB;AAAA;;AACjB,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BAEE;AACE,MAAA,KAAK,EAAEO,KADT;AAEE,MAAA,QAAQ,EAAGE,KAAD,IAAWD,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAF/B;AAGE,MAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAE,SAArB;AAAgC,MAAA,OAAO,EAAEN,OAAzC;AAAkD,MAAA,GAAG,EAAEF,QAAvD;AAAiE,MAAA,IAAI,EAAE;AAAvE;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhBQC,O;;KAAAA,O;AAkBT,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\n\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\ndisplay: block;\r\nmargin: 0 auto;\r\nborder-color: blue;\r\nsize: 60px;\r\n`;\r\n\r\nfunction Spinner() {\r\n  let [loading, setLoading] = useState(true);\r\n  let [color, setColor] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"sweet-loading\">\r\n      \r\n      <input\r\n        value={color}\r\n        onChange={(input) => setColor(input.target.value)}\r\n        placeholder=\"Color of the loader\"\r\n      />\r\n\r\n      <BounceLoader color={\"#36D7B7\"} loading={loading} css={override} size={150} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;"]},"metadata":{},"sourceType":"module"}